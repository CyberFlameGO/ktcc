//ENTRY Program
//Program.main(arrayOf())
@Suppress("MemberVisibilityCanBePrivate", "FunctionName", "CanBeVal", "DoubleNegation", "LocalVariableName", "NAME_SHADOWING", "VARIABLE_WITH_REDUNDANT_INITIALIZER", "RemoveRedundantCallsOfConversionMethods", "EXPERIMENTAL_IS_NOT_ENABLED", "RedundantExplicitType", "RemoveExplicitTypeArguments", "RedundantExplicitType", "unused", "UNCHECKED_CAST", "UNUSED_VARIABLE", "UNUSED_PARAMETER", "NOTHING_TO_INLINE", "PropertyName", "ClassName", "USELESS_CAST", "PrivatePropertyName", "CanBeParameter", "UnusedMainParameter")
@UseExperimental(ExperimentalUnsignedTypes::class)
class Program(HEAP_SIZE: Int = 0) : Runtime(HEAP_SIZE) {
	companion object { @JvmStatic fun main(args: Array<String>): Unit = run { Program().main() } }
	
	fun sum(a: Int, b: Int): Int = stackFrame {
		return a + b
	}
	fun demo(): Unit = stackFrame {
	}
	fun main(): Int = stackFrame {
		var test: CPointer<Unit> = (CPointer<Unit>(malloc(1024)))
		var a: Int = 0
		while (a < 10) {
			a += 1
		}
		stackFrame {
			var b: Int = 0
			while (b < 10) {
				sum(a, b)
				b += 1
			}
		}
		while0@while (1.toBool()) {
			break@while0
		}
		return a + sum(1, 20)
	}
}
